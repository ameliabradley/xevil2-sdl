/*
 *  XEvil(TM) Copyright (C) 1994,1999  Steve Hardt and Michael Judge
 *  
 *  The file, license.txt, distributed along with this source code contains
 *  the license agreement for the XEvil source code and executable.
 *  If you do not have this file, obtain a copy from 
 *  http://www.xevil.com/docs/license.txt
 * 
 *  http://www.xevil.com
 *  satan@xevil.com
 */


#if X11
#include "gen_xpm/missile/missile_25.xpm"
#include "gen_xpm/missile/missile_39.xpm"
#include "gen_xpm/missile/missile_40.xpm"
#endif



#define MISSILE_RADIUS 320
#define MISSILE_DESTRUCT_TIME 65
#define MISSILE_ROTATE_TIME 2



Size Missile::get_size(Dir dir) {
  return context.movingContext.sizes[dir];
}



Size Missile::get_size_max(){
  Size size;
  size.width = 10;
  size.height = 10;
  return size;
}



PhysicalP Missile::create(void *,WorldP,LocatorP,const Pos &)
{
  assert(0);
  return NULL;
}



ShotXdata Missile::xdata;


const ShotContext Missile::context = 
{/** ShotContext **/
  50, /* damage */
  10, /* speed */
  0,/**/
  True,/*REPEATING*/

  {/** MovingContext **/
#if X11
    "black",False,
    "cyan",True,
#endif
#if WIN32
    RGB(0,0,0)/*"black"*/,FALSE,
    RGB(0,255,255)/*"cyan"*/,TRUE,
#endif
    
    /* animMax */
    {0,0,0,0,0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,0,
     0,0,  
     1,1,1,1,
     1,1,1,1,
     1,1,1,1,
     1,1,1,1,
   },
    
    /* sizes */
    {{0,0},{0,0},{0,0},{0,0},{0,0},{0,0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},{0},
     {0},{0},
     {10,3},{9,6},{7,7},{6,9},
     {3,10},{6,9},{7,7},{9,6},
     {10,3},{9,6},{7,7},{6,9},
     {3,10},{6,9},{7,7},{9,6},
    },

    /* offsets */
    {{0}},
    
    /* pixmapBits */
    {{0},{0},{0},{0},{0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},{0},
     {0},{0},
     {CMN_ID(missile_25,IDB_MISSLE25)},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {CMN_ID(missile_39,IDB_MISSLE39)},
     {CMN_ID(missile_40,IDB_MISSLE40)}
    },

    /* maskBits */
    {{0}},

    {/* PhysicalContext */
      1, /* health */
      0, /* mass */
      A_Missile, /* classId */
      "missile", /* clas */

      False, /* transmogifyTarget */
      False, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0.0f, /* objectWorldPercent */
      0, /* levelMaxTimes */
      {10,10}, /* sizeMax */
      Missile::create, /* create */
      True, /* statsCreations */
      False, /* statsUses */
      False, /* statsDeaths */
      Missile::get_stats, /* get_stats */
      NULL, /* arg */
      Missile::init_x, /* init_x */
      Missile::create_from_stream, /* create_from_stream */
    },
    True, /* hiRes */
    0, /* offsetGenerator */
    0, /* transformOverride */
    True, /* useXPM */
  },
};
