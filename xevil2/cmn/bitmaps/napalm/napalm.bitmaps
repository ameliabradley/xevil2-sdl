/*
 *  XEvil(TM) Copyright (C) 1994,1999  Steve Hardt and Michael Judge
 *  
 *  The file, license.txt, distributed along with this source code contains
 *  the license agreement for the XEvil source code and executable.
 *  If you do not have this file, obtain a copy from 
 *  http://www.xevil.com/docs/license.txt
 * 
 *  http://www.xevil.com
 *  satan@xevil.com
 */



#if X11
#include "gen_xpm/napalm_grenade/napalm_grenade_4.xpm"
#include "gen_xpm/napalm_grenade/napalm_grenade_4b.xpm"
#include "gen_xpm/napalm_grenade/napalm_grenade_4c.xpm"
#include "gen_xpm/napalm_grenade/napalm_grenade_4d.xpm"
#endif



Size Napalm::get_size(Dir dir) {
  return context.movingContext.sizes[dir];
}



Size Napalm::get_size_max() {
  return context.movingContext.sizes[CO_air];
}



PhysicalP Napalm::create(void *,WorldP,LocatorP,const Pos &) {
  assert(0);
  return NULL;
}



FallingXdata Napalm::xdata;



const FallingContext Napalm::context = 
{/** FallingContext **/
  {/** MovingContext **/
#if X11
    "black",False,
    "gray60",True,
#endif
#if WIN32
    RGB(0,0,0)/*"black"*/,FALSE,
    RGB(192,192,192)/*"gray60"*/,TRUE,
#endif
    
    /* animMax */
    {0,0,0,0,4,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,
     0,0,
     0,0,
     0,0,  
     4,0,4,0,
     4,0,4,0,
     4,0,4,0,
     4,0,4,0,
    },
    
    /* sizes */
    {{0,0},{0,0},{0,0},{0,0},{8,8},{0,0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},{0},
     {0},{0},
     {8,8},{0,0},{8,8},{0,0},
     {8,8},{0,0},{8,8},{0,0},
     {8,8},{0,0},{8,8},{0,0},
     {8,8},{0,0},{8,8},{0,0},
    },

    /* offsets */
    {{0}},
    
    /* pixmapBits */
    {{0},{0},{0},{0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
      CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},
     {0},{0},
     {0},{0},
     {0},{0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
     {CMN_ID(napalm_grenade_4,IDB_NAPALM1),
      CMN_ID(napalm_grenade_4b,IDB_NAPALM2),
	  CMN_ID(napalm_grenade_4c,IDB_NAPALM3),
      CMN_ID(napalm_grenade_4d,IDB_NAPALM4)},
     {0},
    },

    /* maskBits */
    {{0}},

    {/* PhysicalContext */
      1, /* health */
      5, /* mass */
      A_Napalm, /* classId */
      "napalm-grenade", /* clas */

      False, /* transmogifyTarget */
      False, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0.0f, /* objectWorldPercent */
      0, /* levelMaxTimes */
      {8,8}, /* sizeMax */
      Napalm::create, /* create */
      True, /* statsCreations */
      False, /* statsUses */
      False, /* statsDeaths */
      Napalm::get_stats, /* get_stats */
      NULL, /* arg */
      Napalm::init_x, /* init_x */
      Napalm::create_from_stream, /* create_from_stream */
    },
    True, /* hiRes */
    0, /* offsetGenerator */
    0, /* transformOverride */
    True, /* useXPM */
  },
};
