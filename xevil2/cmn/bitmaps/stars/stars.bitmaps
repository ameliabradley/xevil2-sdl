/*
 *  XEvil(TM) Copyright (C) 1994,1999  Steve Hardt and Michael Judge
 *  
 *  The file, license.txt, distributed along with this source code contains
 *  the license agreement for the XEvil source code and executable.
 *  If you do not have this file, obtain a copy from 
 *  http://www.xevil.com/docs/license.txt
 * 
 *  http://www.xevil.com
 *  satan@xevil.com
 */


#if X11
#include "gen_xpm/stars/stars_4.xpm"
#endif



Size Stars::get_size_max() {
  return context.weaponContext.itemContext.fallingContext.movingContext.sizes[CO_air];
}



PhysicalP Stars::create(void *,WorldP w,LocatorP l,const Pos &pos) {
  PhysicalP ret = new Stars(w,l,pos);
  assert(ret);
  return ret;
}



static void stars_get_item_info(Boolean &isItem,Boolean &isWeapon,
                                CMN_BITS_ID &iconId) {
  isItem = True;
  isWeapon = True;
#if WIN32
  iconId = IDB_STARS;
#endif
#if X11
  iconId = 0;
#endif
}



GunXdata Stars::xdata;



const GunContext Stars::context = 
{ /** GunContext **/
  14, /* shotTime */
  10, /* ammoInitial */
  40, /* ammoMax */

  { /** WeaponContext **/
	0, /*sound*/
    { /** ItemContext **/
      True, /* persists */
      6000, /* coolness */
	  0, /*item use sound */

      { /** FallingContext **/
        {/** MovingContext **/
#if X11
          "black",False,
          "gray45",False,
#endif
#if WIN32
          RGB(0,0,0)/*"black"*/,False,
          RGB(96,96,96)/*"gray45"*/,False,
#endif	  

          /* animMax */
          {0,0,0,0,1},
          
          /* sizes */
          {{0,0},{0,0},{0,0},{0,0},{18,12},},
          
          /* offsets */
          {{0}},
          
          /* pixmapBits */
          {{0},{0},{0},{0},{CMN_ID(stars_4,IDB_STARS)},},
	  
          /* maskBits */
          {{0}},
          
          { /** PhysicalContext **/
            3, /* health */
            5, /* mass */
            A_Stars, /* classId */
            "stars", /* clas */
            
            False, /* transmogifyTarget */
            False, /* doppelUser */
            False, /* potentialHuman */
            False, /* potentialEnemy */
            0, /* enemyWeight */
            True, /* potentialWeapon */
            False, /* potentialOtherItem */
            .0002f, /* objectWorldPercent */
            0, /* levelMaxTimes */
            {18,12}, /* sizeMax */
            Stars::create, /* create */
            False, /* statsCreations */
            False, /* statsUses */
            False, /* statsDeaths */
            NULL, /* get_stats */
            NULL, /* arg */
            Stars::init_x, /* init_x */
            Stars::create_from_stream, /* create_from_stream */
            stars_get_item_info, /* get_item_info */
          },
          True, /* hiRes */
          0, /* offsetGenerator */
          0, /* transformOverride */
          True, /* useXPM */
        },
      },
    },
  },
};
