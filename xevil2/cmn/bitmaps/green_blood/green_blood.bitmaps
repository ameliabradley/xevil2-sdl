/*
 *  XEvil(TM) Copyright (C) 1994,1999  Steve Hardt and Michael Judge
 *  
 *  The file, license.txt, distributed along with this source code contains
 *  the license agreement for the XEvil source code and executable.
 *  If you do not have this file, obtain a copy from 
 *  http://www.xevil.com/docs/license.txt
 * 
 *  http://www.xevil.com
 *  satan@xevil.com
 */


#if X11
#include "gen_xpm/green_blood/green_blood_25.xpm"
#include "gen_xpm/green_blood/green_blood_39.xpm"
#include "gen_xpm/green_blood/green_blood_4.xpm"
#include "gen_xpm/green_blood/green_blood_40.xpm"
#include "gen_xpm/green_blood/green_blood_9.xpm"
#endif


Size GreenBlood::get_size_max() {
  return context.movingContext.physicalContext.sizeMax;
}



PhysicalP GreenBlood::create(void *,WorldP,LocatorP,const Pos &) {
  assert(0);
  return NULL;
}



DropletXdata GreenBlood::xdata;



const DropletContext GreenBlood::context = 
{/** DropletContext **/
  25, /* dissolveTime */

  {/** MovingContext **/
#if X11
    "green3",False,
    "white",True,
#endif
#if WIN32
    RGB(0,0,0)/*"black"*/,FALSE,
    RGB(0,255,255)/*"cyan"*/,TRUE,
#endif    

    /* animMax */
    {0,0,0,0,1,0,
     1,
     0,0,
     1,
     0,0,
     1,
     0,0,
     1,
     0,0,
     0,
     0,0,
     0,0,
     0,0,  
     1,1,1,1,
     1,1,1,1,
     1,1,1,1,
     1,1,1,1,
   },

    /* sizes */
    {{0,0},{0,0},{0,0},{0,0},{2,4},{0,0},
     {1,7},
     {0},{0},
     {7,1},
     {0},{0},
     {1,7},
     {0},{0},
     {7,1},
     {0},{0},
     {0},
     {0},{0},
     {0},{0},
     {0},{0},
     {7,2},{6,4},{5,5},{4,6},
     {2,7},{4,6},{5,5},{6,4},
     {7,2},{6,4},{5,5},{4,6},
     {2,7},{4,6},{5,5},{6,4},
    },

     /* offsets */
    {{0}},

    /* pixmapBits */
    {{0},{0},{0},{0},{CMN_ID(green_blood_4,IDB_BLOODG4)},{0},
     {PH_AUTO_GEN},
     {0},{0},
     {CMN_ID(green_blood_9,IDB_BLOODG9)},
     {0},{0},
     {PH_AUTO_GEN},
     {0},{0},
     {PH_AUTO_GEN},
     {0},{0},
     {0},
     {0},{0},
     {0},{0},
     {0},{0},
     {CMN_ID(green_blood_25,IDB_BLOODG25)},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {PH_AUTO_GEN},
     {CMN_ID(green_blood_39,IDB_BLOODG39)},
     {CMN_ID(green_blood_40,IDB_BLOODG40)}
   },

    /* maskBits */
    {{0}},

    {/* PhysicalContext */
      1, /* health */
      0, /* mass */
      A_GreenBlood, /* classId */
      "green-blood", /* className */

      False, /* transmogifyTarget */
      False, /* doppelUser */
      False, /* potentialHuman */
      False, /* potentialEnemy */
      0, /* enemyWeight */
      False, /* potentialWeapon */
      False, /* potentialOtherItem */
      0.0f, /* objectWorldPercent */
      0, /* levelMaxTimes */
      {7,7}, /* sizeMax */
      Blood::create, /* create */
      False, /* statsCreations */
      False, /* statsUses */
      False, /* statsDeaths */
  	  NULL, /* get_stats */
      NULL, /* arg */
      GreenBlood::init_x, /* init_x */
      GreenBlood::create_from_stream, /* create_from_stream */
    },
    True, /* hiRes */
    0, /* offsetGenerator */
    0, /* transformOverride */
    True, /* useXPM */
  },
};
